plugins {
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id "io.spring.dependency-management" version "1.0.9.RELEASE"
    id 'com.bmuschko.docker-spring-boot-application' version '6.7.0'
    id 'java'
}

docker {
    springBootApplication {
        baseImage = 'adoptopenjdk/openjdk11:alpine-slim'
    }
}

group = 'com.getmelo.poc'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/snapshot' }
    maven { url 'https://repo.spring.io/milestone' }
}

ext {
    springBootVersion = '2.2.6.RELEASE'
    springCloudVersion = 'Hoxton.SR3'
    mapstructVersion = '1.3.1.Final'
    lombokVersion = '1.18.12'
    postgresqlVersion = '42.2.12'
    liquibaseVersion = '3.8.9'
    starterOpenFeignVersion = '2.1.3.RELEASE'
    mapStructVersion = '1.3.1.Final'
    springDocOpenApiVersion = '1.5.2'
    h2Version = '1.4.199'
    springSecurityVersion = '5.1.5.RELEASE'

}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'

    implementation "org.postgresql:postgresql:${postgresqlVersion}"
    implementation "com.h2database:h2:${h2Version}"

    implementation "org.mapstruct:mapstruct-jdk8:${mapStructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"

    implementation "org.springframework.security:spring-security-web:${springSecurityVersion}"
    implementation "org.springframework.security:spring-security-config:${springSecurityVersion}"


    implementation "org.springdoc:springdoc-openapi-ui:${springDocOpenApiVersion}"
    implementation "org.springdoc:springdoc-openapi-webmvc-core:${springDocOpenApiVersion}"
    implementation "org.springdoc:springdoc-openapi-security:${springDocOpenApiVersion}"

    compileOnly "org.springframework.cloud:spring-cloud-starter-openfeign:${starterOpenFeignVersion}"

    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'


}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}
